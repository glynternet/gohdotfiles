augment-cdpath-if-exists /data \
	&& export-if-exists DEVPATH "/data/dev" \
	&& export-if-exists GOPATH "$DEVPATH" \
	&& run-if-not-empty GOPATH source-environment go \
	&& run-if-not-empty GOPATH augment-cdpath-if-exists $GOPATH/src/bitbucket.org/glynny \
	&& run-if-not-empty GOPATH augment-cdpath-if-exists $GOPATH/src/github.com/glynternet

source-environment cpp
source-environment dev
source-environment github
source-environment music \
	&& export-if-exists MUSIC /data/Music

export GARMIN_MOUNT=/media/$USER/GARMIN
export GARMIN_CARD=/media/$USER/3561-3563
source-environment garmin-strava

export-if-exists PACKING_GROUPS_DIR "$DEVPATH/src/github.com/glynternet/packing-data/groups"

music-download() {
	local usage="Usage: ${FUNCNAME[0]} <url>"
	local url="${1:?$usage}"
	local musicDownloadDir="$HOME/Downloads"
	wget --continue --directory-prefix "$musicDownloadDir" "$url"
	echo "Files in $musicDownloadDir"
	ls "$musicDownloadDir"
	echo "The URL was \"$url\""
	echo "Which of these files is it?"
	read filename
	music-copy-extract-and-archive "$musicDownloadDir/$filename"
}

cp-extract-rar(){(
	set -e
	local usage='usage: cp-extract-rar <archive>
	
	Copies a rar archive to the working directory
	and extracts it into its own directory'
	local archive="${1:?"$usage"}"
	local archiveCopy="$(basename "$archive")"
	cp -v "$archive" "$archiveCopy"
	extract-rar "$archiveCopy"
	trash -v "$archiveCopy"
)}

cp-extract-zip(){(
	set -e
	local usage='usage: cp-extract-zip <archive>
	
	Copies a zip archive to the working directory
	and extracts it into its own directory'
	local archive="${1:?"$usage"}"
	local archiveCopy="$(basename "$archive")"
	cp -v "$archive" "$archiveCopy"
	extract-zip "$archiveCopy"
	trash -v "$archiveCopy"
)}

# GIT
source-environment git
generateGitBranchFunctions gh
export GIT_AUTHOR_NAME="Glyn Owen Hanmer"
export GIT_AUTHOR_EMAIL="1295698+glynternet@users.noreply.github.com"
export GIT_COMMITTER_NAME="Glyn Owen Hanmer"
export GIT_COMMITTER_EMAIL="1295698+glynternet@users.noreply.github.com"
export GITMOJIS_JSON="$HOME/tmp/gitmojis.json"
export GITHUB_USER=glynternet
