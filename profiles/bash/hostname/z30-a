export-if-exists GOPATH "${HOME}/go"
source-environment go

source-environment git
source-environment cpp
source-environment moncli

export-if-exists DROPBOX $HOME/Dropbox
run-if-not-empty DROPBOX "source-environment dropbox"

export-if-exists CYCLING_ROUTES_ARCHIVE "$DROPBOX/cycling/Routes"
export-if-exists CYCLING_ACTIVITIES_ARCHIVE "$DROPBOX/cycling/activities"
export GARMIN_MOUNT=/media/$USER/GARMIN
export GARMIN_CARD=/media/$USER/3561-3563
source-environment garmin-strava

export GITMOJIS_JSON="$HOME/tmp/gitmojis.json"

juce-make-run(){ 
	local juceProjectsDir="$HOME/JUCE/projects"
	make -C "$juceProjectsDir/$1/Builds/LinuxMakefile" && "$juceProjectsDir/$1/Builds/LinuxMakefile/build/$1"
}

alias graphitbro='make -C $HOME/Dropbox/money/graphitbros'
alias nordvpn-cycle='nordvpn disconnect ; nordvpn connect'

install-mon-commands() {
	local version="$1"
	if [[ -z "$version" ]]; then
		echo usage: install-mon-commands VERSION
		return 1
	fi
	local outdir=/tmp/mon
	mkdir /tmp/mon
	wget https://github.com/glynternet/mon/releases/download/v${version}/mon_${version}_linux_amd64.tar.gz \
		--output-document=$outdir/mon_${version}_linux_amd64.tar.gz
	local code=$?
	if [[ "$code" != 0 ]]; then
		echo wget exited with code "$code"
		return 2
	fi
	( cd $outdir && tar -zxvf ./mon_${version}_linux_amd64.tar.gz )
	sudo mv -v $outdir/* /usr/local/bin/
}

music-copy-and-archive() {
	local usage="Usage: music-copy-and-archive <file>"
	local file="${1:?$usage}"
	cp -vr "$file" "$HOME/Music/"
	mv -v "$file" "$HOME/Downloads/Music/"
}

music-download() {
	local usage="Usage: music-download <url>"
	local url="${1:?$usage}"
	local musicDownloadDir="$HOME/Downloads"
	wget --continue --directory-prefix "$musicDownloadDir" "$url"
	echo "Files in $musicDownloadDir"
	ls "$musicDownloadDir"
	echo "The URL was \"$url\""
	echo "Which of these files is it?"
	read file
	music-copy-and-archive "$musicDownloadDir/$file"
}

copy-args() {
	echo "$@" | copy
}

calc() {
	echo "scale=3; $@" | bc
}

cp-extract-rar(){(
	set -e
	local usage='usage: cp-extract-rar <archive>
	
	Copies a rar archive to the working directory
	and extracts it into its own directory'
	local archive="${1:?"$usage"}"
	local archiveCopy="$(basename "$archive")"
	cp -v "$archive" "$archiveCopy"
	extract-rar "$archiveCopy"
	trash -v "$archiveCopy"
)}

cp-extract-zip(){(
	set -e
	local usage='usage: cp-extract-zip <archive>
	
	Copies a zip archive to the working directory
	and extracts it into its own directory'
	local archive="${1:?"$usage"}"
	local archiveCopy="$(basename "$archive")"
	cp -v "$archive" "$archiveCopy"
	extract-zip "$archiveCopy"
	trash -v "$archiveCopy"
)}

mon-insert-oppose(){
	local usage='usage: mon-move-amount AMOUNT ACCOUNT_INSERT ACCOUNT_OPPOSE [DATE=0 [NOTE_SUFFIX=""]]'
	local amount="${1:?$usage}"
	local insertAccount="${2:?$usage}"
	local opposeAccount="${3:?$usage}"
	local date="${4:-0}"
	local noteSuffix="$5"
	if [[ ! -z "$noteSuffix" ]]; then
		local noteSuffix=" $noteSuffix"
	fi
	local note="$amount-$insertAccount-$opposeAccount-$date-$(date +%s%N)$noteSuffix"

	moncli account balance-insert "$insertAccount" -a "$amount" -d "$date" --note "$note"
	moncli account balance-insert "$opposeAccount" -a "$(echo "$amount * -1" | bc)" -d "$date" --note "$note"
}

export GIT_AUTHOR_NAME="Glyn Owen Hanmer"
export GIT_AUTHOR_EMAIL="glynhanmer@gmail.com"
export GIT_COMMITTER_NAME="Glyn Owen Hanmer"
export GIT_COMMITTER_EMAIL="glynhanmer@gmail.com"