curl-github() {
	curl --max-time 15 -u ${GITHUBCURL_CREDENTIALS:?"GITHUBCURL_CREDENTIALS must be set to use curl-github"} "$@"
}
gh-notifications() {
	curl-github "${GITHUBCURL_API_URL:?GITHUBCURL_API_URL not set}/notifications"
}
gh-pr-new(){
	local githubCurlApiURL="${GITHUBCURL_API_URL:?GITHUBCURL_API_URL not set}"
	repoRoot="$(git rev-parse --show-toplevel)"
	local defaultRepo="$(basename $(dirname $repoRoot))/$(basename $repoRoot)"
	echo "repo? [$defaultRepo]"
	local repo
	read repo
	repo=${repo:-$defaultRepo}
	local defaultTitle="$(git-last-commit-message)"
	echo "title? [$defaultTitle]"
	local title
	read title
	title=${title:-$defaultTitle}
	echo "body? [$GH_PR_NEW_DEFAULTBODY]"
	local body
	read body
	body=${body:-$GH_PR_NEW_DEFAULTBODY}
	local current="$(git-currentbranch)"
	echo "head? [$current]"
	local head
	read head
	head=${head:-$current}
	local payload="{\"title\":\"$title\",\"body\":\"$body\",\"head\":\"$head\",\"base\":\"$(git-default-remote-default-branch)\"}"
	local out="$(mktemp)"
	echo Response written to $out
	if ! curl-github -X POST -d "$payload" "$githubCurlApiURL/repos/$repo/pulls" > $out; then
		echo curl-github failed. See output at $out
		return 1
	fi
	if ! jq -e .number $out > /dev/null; then
		 echo Creating PR failed. See details at $out
		 return 2
	fi
	local prNumber="$(jq -e .number <"$out")"
	echo Name: pr-$prNumber
	if [[ -z "$GITHUB_URL" ]]; then
		echo "GITHUB_URL must be set to show link to PR"
		return
	fi
	local prURL=https://${GITHUB_URL}/$repo/pull/$prNumber
	copy <<<$prURL
	echo "Link: $prURL (copied to dashboard)"
	if [[ $1 = --open ]]; then
		open $prURL
	fi
}
gh-pr-new-from-head () {
	git-push-new-branch
	gh-pr-new --open
}
gh-pr-new-from-staged () {
	if git diff --cached --quiet; then
		echo Nothing is staged
		return 1
	fi
	local message="${1:?Must provide commit message}"
	git commit -m "$message";
	gh-pr-new-from-head
}
gh-new-repo() {
	# TODO: add settings for branch protection
	local name=${1:?must provide repo name}
	curl-github -X POST -d "{\"name\":\"$name\"}" "${GITHUBCURL_API_URL:?GITHUBCURL_API_URL not set}/user/repos"
}
changelog() {
	( cd "$(git rev-parse --show-toplevel)" && changelog-go generate && git add changelog/@unreleased )
	git commit -m "Add changelog"
	git push
}
