alias curl-github='curl --max-time 15 -u $GITHUBCURL_CREDENTIALS'
gh-notifications() {
	curl-github "$GITHUBCURL_API_URL/notifications"
}
gh-pr-new(){
	local defaultRepo="$(basename $(dirname $PWD))/$(basename $PWD)"
	echo "repo? [$defaultRepo]"
	local repo
	read repo
	if [[ -z "$repo" ]]; then
		repo=$defaultRepo
	fi
	local defaultTitle="$(git log -1 --pretty=%B | head -1)"
	echo "title? [$defaultTitle]"
	local title
	read title
	if [[ -z "$title" ]]; then
		title=$defaultTitle
	fi
	echo "body?"
	local body
	read body
	local current="$(git-currentbranch)"
	echo "head? [$current]"
	local head
	read head
	if [[ "$head" = "" ]]; then
		local head="$current"
	fi
	local payload="{\"title\":\"$title\",\"body\":\"$body\",\"head\":\"$head\",\"base\":\"develop\"}"
	local out="$(mktemp)"
	echo Response written to $out
	curl-github -X POST -d "$payload" "$GITHUBCURL_API_URL/repos/$repo/pulls" > $out
	if [[ ! "$code" -eq 0 ]]; then
		echo curl-github exited with code $code
		exit 1
	fi
	local prNumber="$(jq .number <"$out")"
	echo Name: pr-$prNumber
	if [[ -z "$GITHUB_URL" ]]; then
		echo "GITHUB_URL must be set to show link to PR"
		return
	fi
	echo Link: https://${GITHUB_URL}/$repo/pull/$prNumber
}
gh-new-repo() {
	# TODO: add settings for branch protection
	local name=${1:?must provide repo name}
	curl-github -X POST -d "{\"name\":\"$name\"}" "$GITHUBCURL_API_URL/user/repos"
}
changelog() {
	changelog-go generate
	git add changelog/@unreleased
	git commit -m "Add changelog"
	git push
}
